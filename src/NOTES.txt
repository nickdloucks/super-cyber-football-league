TO-DO

- decide on data schema: team focused
- set up database, persistent storage: CREATED MONGO ATLAS CLUSTER, ADDED CONNECTION INFO TO .ENV
- when database is set up, build user interface around it?: YES, USE SCHEMA VALIDATION ON DB, TO MAKE FRONTEND LIGHTER??
- or build a UI for setting up the league, then build the main UI around the data/game flow?

implement multiple interfaces of the Team class:
class Team implements TeamProfile,TeamRecord,TeamStats {}

GET LOCAL STORAGE DATA UP AND RUNNING SO THE LEAGUE CAN WORK WITH SOME DATA:

important data for games:
winner
loser
(tie)
score
yardage
points broken down by drive, type of score
turnovers
drive count

create methods for common stats analysis operations:
calc: SOS, SOV, winPct, conf winPct, 

important data for analysis:
total yardage
total scoring
takeaways



DB: collections are a grouping of similar data,
    and databases are groupings of similar collections

*Why use React if a Typsecript component can return JSX?

if you need to create global types, you can just create an index.d.ts file in your src folder 
(for example) and the types you add in this file will be available in your whole project, 
you don't need to do any other thing.

make players that have different playing styles, personalities somehow
maybe some elementary AI  so that players can react to in-game situations